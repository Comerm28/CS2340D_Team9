5 Code Smells:
1) Dispensibles
  We noticed that the GiftCardClass was a Lazy and Data Class since it was functionally no different from the Item Class. 
  Logically, it also isn't any different from a regular item since there is no difference from buying a regular item and buying a gift card.
  To fix this code smell, we deleted the class and changed the main file to create a Item object instead of a Gift Card object.

2) Couplers
  The Order class has a sendConfirmationEmail() method, which should be in the EmailSender class to address the coupling issue. 
  By moving this method to EmailSender with a paremeter of type Order, we separate responsibilities more effectively, making the code cleaner and reducing dependencies between classes

3) The item class is a object-oriented abuser as many different types of items will need to inherit from it, but it should not be ever instantiated. 
Each individual item should define its own method to get its necessary price for the order class, so that must be added as a necessary override to 
allow for correct functionality of the system.

4) The Order class has a sendConfirmationEmail() method, which should be in the EmailSender class to address the coupling issue. By moving this method to 
EmailSender with a paremeter of type Order, we separate responsibilities more effectively, making the code cleaner and reducing dependencies between classes.
